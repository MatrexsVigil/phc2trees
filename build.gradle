// @file build.gradle
// pamhc2trees mod gradle build relay (mc1.15.2)
buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'
//-----------------------------------------------------------------------------
version = "${version_pamhc2trees}"
group = "com.pam.pamhc2trees"
archivesBaseName = "pamhc2trees-${version_minecraft}"


repositories {
    maven { name = "Progwml6 maven"; url = "https://dvs1.progwml6.com/files/maven/" } // JEI files
    maven { name = "ModMaven"; url = "modmaven.k-4u.nl" } // JEI files, fallback
}

minecraft {
    mappings channel: 'snapshot', version: "${version_fml_mappings}"
    // accessTransformer = file('build/resources/main/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'debug'
            property 'forge.logging.noansi', "false"
            mods {
                pamhc2trees {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                pamhc2trees {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'pamhc2trees', '--all', '--output', file('src/generated/resources/')
            mods {
                pamhc2trees {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${version_forge_minecraft}"

}

processResources {
    outputs.upToDateWhen { false } // thx to @tterrag for this hint
    doLast { file("${sourceSets.main.output.resourcesDir}/.gitversion").text = 'git log "-1" "--format=%h"'.execute().in.text.trim() }

    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'

        expand 'version': project.version

        exclude 'META-INF/mods.toml'
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "pamhc2trees",
                "Specification-Vendor"    : "pam",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version_pamhc2trees}",
                "Implementation-Vendor"   : "pam",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) { type 'jar'; builtBy 'reobfJar'; }

publishing {
    publications { mavenJava(MavenPublication) { artifact reobfArtifact } }
    repositories { maven { url "file:///${project.projectDir}/mcmodsrepo" } }
}